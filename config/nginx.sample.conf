# User and group to run as
user colin admin;
# Number of nginx workers
worker_processes 2;
# pid of nginx master process
pid logs/nginx.pid;
# Number of worker connections. 1024 is a good default
events {
	worker_connections 1024;
}
# start the http module where we config http access.
http {
	# Pull in mime-types. You can break out your config
	# into as many includes as you want to make it cleaner
	include conf/mime.types;
	# set a default type for the rare situation that
	# nothing matches from the mime-type include
	default_type application/octet-stream;
	# configure log format
	log_format main '$remote_addr - $remote_user [$time_local] $status '
									'"$request" $body_bytes_sent "$http_referer" '
									'"$http_user_agent" "http_x_forwarded_for" ';
	# main access log
	access_log logs/access.log main;
	# main error log
	error_log logs/error.log debug;
	# OSX does not support sendfile.
	# Uncomment this if you're on linux or bsd
	#sendfile	on;
	# These are good default values.
	tcp_nopush on;
	keepalive_timeout 65;
	tcp_nodelay on;
	# this is where you define your mongrel clusters.
	# you need one of these blocks for each cluster
	# and each one needs its own name to refer to it later.
	upstream mongrel {
		server 127.0.0.1:3000;
		server 127.0.0.1:3001;
		server 127.0.0.1:3002;
	}
	# output compression saves bandwidth
	gzip on;
	gzip_min_length 		550; # Default was 1100, but it didn't gzip everything then.
	gzip_buffers 				4 8k;
	gzip_proxied any;
	gzip_types  text/plain text/html text/css application/x-javascript text/xml application/xml application/xml+rss text/js text/javascript;
	
	# the server directive is nginx's virtual host directive.
	server {
		# port to listen on. Can also be set to an IP:PORT
		listen		80;
		# sets the domains[s] that this vhost server requests for
		# server_name example.com www.example.com;
		# Set the max size for file uploads to 50Mb
		client_max_body_size 50M;
		# doc root
		root /Users/colin/myrails/music/public;
		# vhost specific access log
		access_log logs/host.access.log main;
		# If you have a 'maintenance.html' in your doc root, all
		# requests will be forwarded to that automatically.
		# This is part of Capistrano's 'disable_web' task.
		if (-f $document_root/maintenance.html) {
			rewrite ^(.*)$ /maintenance.html last;
			break;
		}
		location / {
			# needed to forward user's IP address to rails
			proxy_set_header X-Real-IP $remote_addr;
			# needed for HTTPS
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_redirect false;
			# Basic Caching
			# Add /index.html to the request and check to see if that
			# file exists. If it does, continue to the next config.
			if (-f $request_filename/index.html) {
				rewrite (.*) $1/index.html break;
			}
			# Rails Caching rules
			# Add .html to the end of the request, then check for a file
			# with that name. If the file exists, continue to the next
			# config. Otherwise set the headers and proxy the request to
			# the mongrel cluster.
			if (-f $request_filename.html) {
				rewrite (.*) $1.html break;
			}
			if (!-f $request_filename) {
				proxy_pass http://mongrel;
				break;
			}
		}
		# Add expires header for static content
		location ~* \.(js|css|jpg|jpeg|gif|png)$ {
		  if (-f $request_filename) {
		        expires      7d;
		    break; 
		  }        
		}
		error_page 500 502 503 504 /50x.html;
		location = /50x.html {
			root html;
		}
	}
}